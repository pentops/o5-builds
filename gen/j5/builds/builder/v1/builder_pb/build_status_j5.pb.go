// Code generated by protoc-gen-go-j5. DO NOT EDIT.

package builder_pb

import (
	driver "database/sql/driver"
	fmt "fmt"

	j5reflect "github.com/pentops/j5/lib/j5reflect"
	proto "google.golang.org/protobuf/proto"
)

func (msg *BuildContext) Clone() any {
	return proto.Clone(msg).(*BuildContext)
}

// j5.builds.builder.v1 is OK for  J5 Methods

func (msg *BuildContext) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *BuildContext) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *BuildReport) Clone() any {
	return proto.Clone(msg).(*BuildReport)
}

// j5.builds.builder.v1 is OK for  J5 Methods

func (msg *BuildReport) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *BuildReport) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

func (msg *Output) Clone() any {
	return proto.Clone(msg).(*Output)
}

// j5.builds.builder.v1 is OK for  J5 Methods

func (msg *Output) J5Reflect() j5reflect.Root {
	return j5reflect.MustReflect(msg.ProtoReflect())
}

func (msg *Output) J5Object() j5reflect.Object {
	return j5reflect.MustReflect(msg.ProtoReflect()).(j5reflect.Object)
}

// BuildStatus
const (
	BuildStatus_UNSPECIFIED BuildStatus = 0
	BuildStatus_PENDING     BuildStatus = 1
	BuildStatus_PROGRESS    BuildStatus = 2
	BuildStatus_SUCCESS     BuildStatus = 3
	BuildStatus_FAILURE     BuildStatus = 4
)

var (
	BuildStatus_name_short = map[int32]string{
		0: "UNSPECIFIED",
		1: "PENDING",
		2: "PROGRESS",
		3: "SUCCESS",
		4: "FAILURE",
	}
	BuildStatus_value_short = map[string]int32{
		"UNSPECIFIED": 0,
		"PENDING":     1,
		"PROGRESS":    2,
		"SUCCESS":     3,
		"FAILURE":     4,
	}
	BuildStatus_value_either = map[string]int32{
		"UNSPECIFIED":              0,
		"BUILD_STATUS_UNSPECIFIED": 0,
		"PENDING":                  1,
		"BUILD_STATUS_PENDING":     1,
		"PROGRESS":                 2,
		"BUILD_STATUS_PROGRESS":    2,
		"SUCCESS":                  3,
		"BUILD_STATUS_SUCCESS":     3,
		"FAILURE":                  4,
		"BUILD_STATUS_FAILURE":     4,
	}
)

// ShortString returns the un-prefixed string representation of the enum value
func (x BuildStatus) ShortString() string {
	return BuildStatus_name_short[int32(x)]
}
func (x BuildStatus) Value() (driver.Value, error) {
	return []uint8(x.ShortString()), nil
}
func (x *BuildStatus) Scan(value interface{}) error {
	var strVal string
	switch vt := value.(type) {
	case []uint8:
		strVal = string(vt)
	case string:
		strVal = vt
	default:
		return fmt.Errorf("invalid type %T", value)
	}
	val := BuildStatus_value_either[strVal]
	*x = BuildStatus(val)
	return nil
}
